{"version":3,"file":"vue.js","sources":["../src/util.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/compile/index.js","../src/init.js","../src/index.js"],"sourcesContent":["export function isFunction(val) {\n    return typeof val === 'function'\n}\nexport function isObject(val) {\n    return typeof val === 'object' && val !== null\n}\n","//push shift pop unshift reverse sort splice,7个方法是变异方法，会更改原数组\nlet oldArrayPrototype = Array.prototype\nexport let arrayMethods = Object.create(oldArrayPrototype) //拷贝原有的原型方法\n//arrayMethods.__proto__ = Array.prototype 继承\nlet methods = [\n    'push', 'shift', 'pop', 'unshift', 'reverse', 'sort', 'splice'\n]\nmethods.forEach(method => {\n    arrayMethods[method] = function (...args) {\n        //console.log('数组发生变化,重写这7个方法')\n        oldArrayPrototype[method].call(this, ...args)\n        let inserted;\n        let ob = this.__ob__\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args;\n                break;\n            case 'splice':\n                inserted = args.slice(2);\n                break;\n            default:\n                break;\n        }\n        //如果有新增的内容要继续进行劫持，我需要观测的数组里的每一项，而不是数组（已新增为例）\n        if (inserted) ob.observeArray(inserted)\n    }\n})","import { isObject } from '../util'\nimport { arrayMethods } from './array'\n\n//检测数据变化，类有类型，对象无类型\nclass Observer {\n    constructor(data) { //对对象中的所有属性进行劫持\n        Object.defineProperty(data, \"__ob__\", {\n            value: this,\n            enumerable: false\n        })\n        //data.__ob__ = this  //会不停递归，爆栈💥\n        //用户很少通过索引数组 arr[98]=100,所以内部想到不对索引进行拦截，因为消耗严重\n        //经常使用 push shift pop unshift reverse sort splice 7个变异方法，可能会更改原数组\n        //数组没有监控索引的变化，但是索引对应的内容是对象类型，需要被监控 Object.freeze\n        if (Array.isArray(data)) { //数组劫持的拦截\n            //对数组原来的方法进行改写,切片编程 高阶函数（包装一层）\n            data.__proto__ = arrayMethods;\n            //如果数组中的数据是对象类型，需要监控对象的变化\n            this.observeArray(data)\n        } else {\n            this.walk(data) //对象劫持的拦截\n        }\n    }\n    observeArray(data) { //对数组中的数组和对象进行再次劫持，递归\n        data.forEach(item => {\n            observer(item)\n        })\n    }\n    walk(data) { //对象\n        Object.keys(data).forEach(key => {\n            defineReactive(data, key, data[key])\n        })\n    }\n}\n//vue2会对对象进行递归遍历，将每个属性用 defineProperty 重新定义 性能差\nfunction defineReactive(data, key, value) {\n    observer(value) //对象尽可能扁平化，不要多层递归\n    Object.defineProperty(data, key, {\n        get() {\n            return value;\n        },\n        set(newV) { //如果用户赋值一个新对象，需要将这个对象进行劫持\n            observer(newV)\n            value = newV\n        }\n    })\n}\nexport function observer(data) {\n    //如果是对象才观测\n    if (!isObject(data)) {\n        return;\n    }\n    if (data.__ob__) {\n        return;\n    }\n    return new Observer(data)\n}","import { isFunction } from './util'\nimport { observer } from './observer/index'\nexport function initState(vm) { //表示在vue的基础上做一次混合操作\n    const opts = vm.$options\n    if (opts.data) {\n        initData(vm)\n    }\n    // if (opts.computed) {\n    //     initComputed()\n    // }\n    // if (opts.watch) {\n    //     initWatch()\n    // }\n}\nfunction proxy(vm, source, key) {\n    Object.defineProperty(vm, key, {\n        get() {\n            return vm[source][key]\n        },\n        set(newVal) {\n            vm[source][key] = newVal\n        }\n    })\n}\nfunction initData(vm) { //vue的内部变量以$开头，不会进行代理\n    let data = vm.$options.data\n    //vue2 会将data中对所有数据，进行数据劫持 Object.defineProperty\n    //这个时候vm和data没有关系，通过_data进行关联\n    data = vm._data = isFunction(data) ? data.call(vm) : data;\n    for (let key in data) { //vm.name =>am._data.name 代理\n        proxy(vm, '_data', key)\n    }\n    observer(data)\n}","const ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*'; // 标签名 <div></div>\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // 用来获取标签名：match后索引为1的\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 匹配开始标签\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配闭合标签\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的key=value{\"xx\"| 'xx'| xx }\nconst startTagClose = /^\\s*(\\/?)>/; // /> </div>\nconst defaultRE = /\\{\\{((?:.|\\r?\\n))+?\\}\\}/g; // {{xxxx}}\n//const doctype = /^<!DOCTYPE [^>]+>/i\n//const comment = /^<!\\--/\n//const conditionalComment = /^<!\\[/\n\nfunction start(tagName, attributes) {\n\n}\n\nfunction end(tagName) {\n\n}\nfunction chars(text) {\n\n}\n//html字符串解析成对应的脚本来触发 tokens <div id=\"app\">{{name}}</div>\nfunction parserHTML(html) {\n    function advance(len) {\n        html = html.substring(len)\n    }\n    function parserStartTag() {\n        const start = html.match(startTagOpen)\n        if (start) {\n            const match = {\n                tagName: start[1], //标签名\n                attrs: []\n            }\n            advance(start[0].length)\n            let end; //如果没有遇到标签结尾就会不停的解析\n            let attr;\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\n                advance(attr[0].length)\n            }\n            if (end) {\n                advance(end.length)\n            }\n        }\n        return false; //不是开始标签\n    }\n    while (html) { //要解析的内容是否存在\n        let textEnd = html.indexOf('<')\n        if (textEnd == 0) {\n            const startTagMatch = parserStartTag(html) //解析开始标签\n            if (startTagMatch) {\n                start(startTagMatch.tagName, startTagMatch.attrs)\n                continue;\n            }\n            break;\n            // const endTagMatch = parserEndTag() //解析开始标签\n            // if (endTagMatch) {\n\n            // }\n        }\n        let text; //  {{name}}</div>\n        if (textEnd > 0) {\n            text = html.substring(0, textEnd)\n        }\n        if(text){\n            chars(text)\n            advance(text.length)\n        }\n\n    }\n}\n\n\nexport const compileToFunction = function (template) {\n    //库 htmlparser2\n    parserHTML(template)\n}\n","import { initState } from './state'\nimport { compileToFunction } from './compile/index'\nexport function initMixin(Vue) { //表示在vue的基础上做一次混合操作\n    Vue.prototype._init = function (options) {\n        const vm = this;\n        vm.$options = options;\n        //对数据进行初始化\n        initState(vm) //vm.$options.data... 数据劫持\n\n\n        if (vm.$options.el) {\n            //将数据挂载到这个模版上\n            vm.$mount(vm.$options.el)\n        }\n    }\n    Vue.prototype.$mount = function (el) {\n        const vm = this\n        const options = vm.$options\n        el = document.querySelector(el)\n        //把模版转化成，对应的渲染函数=》虚拟dom概念 vnode =》diff算法 更新虚拟dom =》产生真实节点，更新\n        if (!options.render) { //没有render函数，用template\n            let template = options.template\n            if (!template && el) { //用户也没有传递template，就获取el的内容作为模版\n                template = el.outerHTML\n                let render = compileToFunction(template) //把模版变成函数\n                options.render = render\n            }\n        }\n    }\n}","import { initMixin } from './init'\nfunction Vue(options) {\n    //options 为用户传入的选项\n    this._init(options) //初始化操作，组件\n}\ninitMixin(Vue)\nexport default Vue"],"names":["isFunction","val","isObject","oldArrayPrototype","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","call","inserted","ob","__ob__","slice","observeArray","Observer","data","defineProperty","value","enumerable","isArray","__proto__","walk","item","observer","keys","key","defineReactive","get","set","newV","initState","vm","opts","$options","initData","proxy","source","newVal","_data","ncname","qnameCapture","startTagOpen","RegExp","attribute","startTagClose","start","tagName","attributes","parserHTML","html","advance","len","substring","parserStartTag","match","attrs","length","end","attr","push","name","textEnd","indexOf","startTagMatch","text","compileToFunction","template","initMixin","Vue","_init","options","el","$mount","document","querySelector","render","outerHTML"],"mappings":"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"}